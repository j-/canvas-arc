{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["round","value","places","Math","PI","TAU","DEFAULT_END_ANGLE","App","React","startAngle","setStartAngle","endAngle","setEndAngle","undefined","anticlockwise","setAnticlockwise","canvasRef","handleSubmit","e","preventDefault","handleChangeStartAngle","currentTarget","valueAsNumber","handleChangeEndAngle","handleChangeAnticlockwise","canvas","current","ctx","getContext","width","height","radius","min","save","clearRect","translate","scale","beginPath","moveTo","arc","setLineDash","strokeStyle","lineWidth","stroke","lineCap","abs","font","fillStyle","rotate","fillText","restore","className","href","onSubmit","htmlFor","id","type","list","max","step","onChange","name","checked","style","fontFamily","whiteSpace","userSelect","color","String","label","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b96a20ea.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst round = (value: number, places: number) => Math.round(value * 10 ** places) / 10 ** places;\n\nconst PI = Math.PI;\nconst TAU = PI * 2;\nconst PRECISION = 2;\nconst DEFAULT_START_ANGLE = 0;\nconst DEFAULT_END_ANGLE = round(Math.PI / 4, PRECISION);\nconst ANGLE_THRESHOLD = 0.05;\n\nconst App: React.FC = () => {\n  const [startAngle, setStartAngle] = React.useState(DEFAULT_START_ANGLE);\n  const [endAngle, setEndAngle] = React.useState(DEFAULT_END_ANGLE);\n  const [anticlockwise, setAnticlockwise] = React.useState<undefined | boolean>(undefined);\n\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  const handleSubmit = React.useCallback<React.FormEventHandler<HTMLFormElement>>((e) => {\n    e.preventDefault();\n  }, []);\n\n  const handleChangeStartAngle = React.useCallback<React.ChangeEventHandler<HTMLInputElement>>((e) => {\n    setStartAngle(round(e.currentTarget.valueAsNumber, PRECISION));\n  }, []);\n\n  const handleChangeEndAngle = React.useCallback<React.ChangeEventHandler<HTMLInputElement>>((e) => {\n    setEndAngle(round(e.currentTarget.valueAsNumber, PRECISION));\n  }, []);\n\n  const handleChangeAnticlockwise = React.useCallback<React.ChangeEventHandler<HTMLInputElement>>((e) => {\n    switch (e.currentTarget.value) {\n      case 'true': return setAnticlockwise(true);\n      case 'false': return setAnticlockwise(false);\n      case 'undefined': return setAnticlockwise(undefined);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const { width, height } = canvas;\n    const radius = Math.min(width, height) * 0.5;\n\n    ctx.save();\n    ctx.clearRect(0, 0, width, height);\n    ctx.translate(width / 2, height / 2);\n    ctx.scale(0.95, 0.95);\n\n    ctx.beginPath();\n    ctx.moveTo(radius, 0);\n    ctx.arc(0, 0, radius, 0, TAU);\n    ctx.setLineDash([15, 10]);\n    ctx.strokeStyle = '#ccc';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, startAngle, endAngle, anticlockwise);\n    ctx.setLineDash([])\n    ctx.strokeStyle = '#008';\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 15;\n    ctx.stroke();\n\n    if (Math.abs(Math.abs(startAngle - endAngle) - TAU) % TAU > ANGLE_THRESHOLD) {\n      ctx.font = 'bold 18px Arial, sans-serif';\n      ctx.fillStyle = '#333';\n      ctx.rotate(startAngle);\n      ctx.fillText('S', radius * 0.85, 0);\n      ctx.rotate(endAngle - startAngle);\n      ctx.fillText('E', radius * 0.85, 0);\n    }\n\n    ctx.restore();\n  }, [startAngle, endAngle, anticlockwise]);\n\n  return (\n    <div className=\"App container my-5\">\n      <a href=\"https://skeoh.com/\" className=\"text-secondary\">&larr; skeoh.com</a>\n      <h1 className=\"mb-5\">Canvas arc</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"container px-sm-2\">\n          <div className=\"row mx-sm-n3\">\n            <div className=\"col-lg-5 px-sm-2\">\n              <div className=\"form-group my-3 card card-body\">\n                <label htmlFor=\"App-start-angle\"><code>startAngle</code></label><br />\n                <input\n                  id=\"App-start-angle\"\n                  className=\"form-control-range\"\n                  type=\"range\"\n                  list=\"App-tickmarks\"\n                  min={0}\n                  max={TAU}\n                  step=\"any\"\n                  value={startAngle}\n                  onChange={handleChangeStartAngle}\n                />\n                <br />\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  step={PI * 1 / 4}\n                  value={startAngle}\n                  onChange={handleChangeStartAngle}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-lg-5 px-sm-2\">\n              <div className=\"form-group my-3 card card-body\">\n                <label htmlFor=\"App-end-angle\"><code>endAngle</code></label><br />\n                <input\n                  id=\"App-end-angle\"\n                  className=\"form-control-range\"\n                  type=\"range\"\n                  list=\"App-tickmarks\"\n                  min={0}\n                  max={TAU}\n                  step=\"any\"\n                  value={endAngle}\n                  onChange={handleChangeEndAngle}\n                />\n                <br />\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  step={PI * 1 / 4}\n                  value={endAngle}\n                  onChange={handleChangeEndAngle}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-lg-2 px-sm-2 d-flex\">\n              <div className=\"my-3 card card-body flex-fill\">\n                <code>anticlockwise</code><br />\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    name=\"App-anticlockwise\"\n                    id=\"App-anticlockwise-true\"\n                    className=\"form-check-input\"\n                    value=\"true\"\n                    onChange={handleChangeAnticlockwise}\n                    checked={anticlockwise === true}\n                  /> <label htmlFor=\"App-anticlockwise-true\" className=\"form-check-label\"><code>true</code></label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    name=\"App-anticlockwise\"\n                    id=\"App-anticlockwise-false\"\n                    className=\"form-check-input\"\n                    value=\"false\"\n                    onChange={handleChangeAnticlockwise}\n                    checked={anticlockwise === false}\n                  /> <label htmlFor=\"App-anticlockwise-false\" className=\"form-check-label\"><code>false</code></label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    name=\"App-anticlockwise\"\n                    id=\"App-anticlockwise-undefined\"\n                    className=\"form-check-input\"\n                    value=\"undefined\"\n                    onChange={handleChangeAnticlockwise}\n                    checked={anticlockwise === undefined}\n                  /> <label htmlFor=\"App-anticlockwise-undefined\" className=\"form-check-label\"><code>undefined</code></label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row mx-sm-n3 my-md-3 my-lg-0\">\n            <div className=\"col-md-12 px-sm-2\">\n              <div className=\"card card-body text-white bg-dark overflow-auto\">\n                <div style={{ fontFamily: 'Consolas, \"Courier New\", monospace', whiteSpace: 'pre', userSelect: 'all' }}>\n                  <span style={{ color: '#4fc1ff' }}>ctx</span>\n                  <span style={{ color: '#d4d4d4' }}>.</span>\n                  <span style={{ color: '#dcdcaa' }}>arc</span>\n                  <span style={{ color: '#d4d4d4' }}>(</span>\n                  <span style={{ color: '#4fc1ff' }}>x</span>\n                  <span style={{ color: '#d4d4d4' }}>,&#160;</span>\n                  <span style={{ color: '#4fc1ff' }}>y</span>\n                  <span style={{ color: '#d4d4d4' }}>,&#160;</span>\n                  <span style={{ color: '#4fc1ff' }}>radius</span>\n                  <span style={{ color: '#d4d4d4' }}>,&#160;</span>\n                  <span style={{ color: '#b5cea8' }}>{round(startAngle / PI, PRECISION)}</span>\n                  <span style={{ color: '#d4d4d4' }}>&#160;*&#160;</span>\n                  <span style={{ color: '#9cdcfe' }}>Math</span>\n                  <span style={{ color: '#d4d4d4' }}>.</span>\n                  <span style={{ color: '#4fc1ff' }}>PI</span>\n                  <span style={{ color: '#d4d4d4' }}>,&#160;</span>\n                  <span style={{ color: '#b5cea8' }}>{round(endAngle / PI, PRECISION)}</span>\n                  <span style={{ color: '#d4d4d4' }}>&#160;*&#160;</span>\n                  <span style={{ color: '#9cdcfe' }}>Math</span>\n                  <span style={{ color: '#d4d4d4' }}>.</span>\n                  <span style={{ color: '#4fc1ff' }}>PI</span>\n                  {\n                    anticlockwise === undefined || <>\n                      <span style={{ color: '#d4d4d4' }}>,&#160;</span>\n                      <span style={{ color: '#569cd6' }}>{String(anticlockwise)}</span>\n                    </>\n                  }\n                  <span style={{ color: '#d4d4d4' }}>);</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <datalist id=\"App-tickmarks\">\n          <option value={PI * 0 / 4} label=\"0\"></option>\n          <option value={PI * 1 / 4}></option>\n          <option value={PI * 2 / 4}></option>\n          <option value={PI * 3 / 4}></option>\n          <option value={PI * 4 / 4} label=\"PI\"></option>\n          <option value={PI * 5 / 4}></option>\n          <option value={PI * 6 / 4}></option>\n          <option value={PI * 7 / 4}></option>\n          <option value={PI * 8 / 4} label=\"TAU\"></option>\n        </datalist>\n      </form>\n\n      <div className=\"d-flex justify-content-center\">\n        <canvas width={500} height={500} ref={canvasRef} className=\"my-5\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}